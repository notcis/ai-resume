// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       String    @id @default(cuid())
  name     String?
  username String?   @unique
  email    String?   @unique
  password String?
  image    String?
  accounts Account[]
  Resume   Resume?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  id                String @id @default(cuid())
  userId            String @unique
  type              String
  provider          String
  providerAccountId String
  user              User?  @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Resume {
  id         String       @id @default(cuid())
  userId     String       @unique
  userEmail  String
  title      String?
  name       String?
  job        String?
  address    String?
  themeColor String?
  phone      String?
  summary    String?
  experience Experience[]
  education  Education[]
  skill      Skill[]
  user       User?        @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Experience {
  id        String    @id @default(cuid())
  resumeId  String
  title     String?
  company   String?
  address   String?
  startDate DateTime?
  endDate   DateTime?
  summary   String?
  resume    Resume?   @relation(fields: [resumeId], references: [id])
}

model Education {
  id            String  @id @default(cuid())
  resumeId      String
  name          String?
  address       String?
  qualification String?
  year          String?
  resume        Resume? @relation(fields: [resumeId], references: [id])
}

model Skill {
  id       String  @id @default(cuid())
  resumeId String
  name     String?
  level    String?
  resume   Resume? @relation(fields: [resumeId], references: [id])
}
